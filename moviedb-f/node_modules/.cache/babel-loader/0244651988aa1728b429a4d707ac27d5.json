{"ast":null,"code":"var _jsxFileName = \"/home/jyoti/Projects/moviedb/moviedb-f/src/components/Details/MovieDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Footer from '../Footer/Footer';\nimport Header from '../Header/Header';\nimport { Container, Row, Image, Col } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport dateFormat from 'dateformat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieDetail = () => {\n  _s();\n\n  const {\n    id,\n    name\n  } = useParams();\n  const [movieDetails, setMovieDetails] = useState([]);\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      // const res = await axios.get(`http://localhost:5000/api/v1/movies/get-movie-details/${id}`);\n      const res = await axios.get(`http://localhost:5000/api/v1/movies/movie/${id}/${name}`);\n      setMovieDetails(res.data);\n    };\n\n    fetchMovieDetails();\n  }, []);\n  console.log(movieDetails);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: movieDetails.map(movie => /*#__PURE__*/_jsxDEV(Row, {\n        className: \"p-3\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 9,\n          style: {\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/w500${movie.backdrop_path}\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundSize: 'cover',\n            height: 360\n          },\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: `https://image.tmdb.org/t/p/w500` + movie.poster_path,\n            style: {\n              height: 360,\n              padding: 15\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 3,\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-uppercase\",\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Status \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this), \" \", movie.status, /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Released On: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this), dateFormat(movie.release_date, \"mmmm dS, yyyy\"), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Runtime \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), \" \", movie.runtime, \" Mins\", /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), \" \", movie.original_language]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 9,\n          className: \"p-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: movie.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Production Houses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), movie.production_companies.map(production => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [production.name, /*#__PURE__*/_jsxDEV(Image, {\n              src: `https://image.tmdb.org/t/p/w500` + movie.logo_path\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 53\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, movie.id.toString(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieDetail, \"JP1vG+7HgJLiBs4XYUdWvv7msvI=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieDetail;\nexport default MovieDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"sources":["/home/jyoti/Projects/moviedb/moviedb-f/src/components/Details/MovieDetails.js"],"names":["React","useEffect","useState","Footer","Header","Container","Row","Image","Col","useParams","axios","dateFormat","MovieDetail","id","name","movieDetails","setMovieDetails","fetchMovieDetails","res","get","data","console","log","map","movie","backgroundImage","backdrop_path","backgroundRepeat","backgroundSize","height","poster_path","padding","title","status","release_date","runtime","original_language","overview","production_companies","production","logo_path","toString"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Footer from '../Footer/Footer';\nimport Header from '../Header/Header';\nimport { Container, Row, Image, Col } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport dateFormat from 'dateformat';\n\nconst MovieDetail = () => {\n    const {id, name} = useParams();\n    const [movieDetails, setMovieDetails] = useState([])\n\n    useEffect(() => {\n        const fetchMovieDetails = async () => {\n            // const res = await axios.get(`http://localhost:5000/api/v1/movies/get-movie-details/${id}`);\n            const res = await axios.get(`http://localhost:5000/api/v1/movies/movie/${id}/${name}`);\n            setMovieDetails(res.data);\n        }\n        fetchMovieDetails();\n    }, [])\n    console.log(movieDetails)\n\n    return (\n        <React.Fragment>\n            <Header/>\n            <Container>\n                {movieDetails.map((movie) => (\n                    <Row className=\"p-3\" key={(movie.id).toString()}>\n                        <Col sm={9} style={{ backgroundImage: `url(\"https://image.tmdb.org/t/p/w500${movie.backdrop_path}\")`, backgroundRepeat: 'no-repeat', backgroundSize: 'cover', height: 360 }}>\n                            <Image src={`https://image.tmdb.org/t/p/w500` + movie.poster_path} style={{height: 360, padding: 15}}></Image>\n                        </Col>\n                        <Col sm={3}>\n                            <h5 className=\"text-uppercase\">{movie.title}</h5>\n                            <h6>Status </h6> {movie.status}\n                            <h6>Released On: </h6>{dateFormat(movie.release_date, \"mmmm dS, yyyy\")}\n                            <h6>Runtime </h6> {movie.runtime} Mins\n                            <h6>Language</h6> {movie.original_language}\n\n                        </Col>\n                        <Col sm={9} className=\"p-3\">\n                            <h6>Overview</h6>\n                            <p>{movie.overview}</p>\n                            <h6>Production Houses</h6>{movie.production_companies.map((production) => (\n                                <p>{production.name}<Image src={`https://image.tmdb.org/t/p/w500` + movie.logo_path}></Image></p>\n                            ))}\n                        </Col>\n                    </Row>\n                ))}\n            </Container>\n            <Footer/>\n        </React.Fragment>\n    )\n}\n\nexport default MovieDetail;"]},"metadata":{},"sourceType":"module"}