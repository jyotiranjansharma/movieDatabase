{"ast":null,"code":"var _jsxFileName = \"/home/jyoti/Projects/moviedb/moviedb-f/src/components/Carousel/MovieCarousel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ItemsCarousel from 'react-items-carousel';\nimport { Row, Card } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport dateformat from 'dateformat';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieCarousel = () => {\n  _s();\n\n  const history = useHistory();\n  const [activeItemIndex, setActiveItemIndex] = useState(0);\n  const chevronWidth = 30;\n  const myloginData = JSON.parse(localStorage.getItem('myloginData'));\n  const [isLogin, setIsLogin] = useState(false);\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const checkLogin = async () => {\n      if (myloginData) {\n        const token = myloginData.token;\n\n        if (token) {\n          const verified = await axios.get('http://localhost:5000/api/v1/users/verify', {\n            headers: {\n              Authorization: token\n            }\n          });\n          console.log(verified);\n          setIsLogin(verified.data);\n          if (verified.data === false) return localStorage.clear();\n        } else {\n          setIsLogin(false);\n        }\n      }\n    };\n\n    checkLogin();\n  }, []); // useEffect(() => {\n  //     axios.get(`http://localhost:5000/api/v1/movies/allmovies`)\n  //     .then((res) => {\n  //         setMovies(res.data);\n  //     })\n  // }, [])\n\n  useEffect(() => {\n    const getMovies = async () => {\n      const res = await axios.get('http://localhost:5000/api/v1/movies/allmovies');\n      setMovies(res.data);\n    };\n\n    getMovies();\n  }, []);\n\n  const movieDetail = id => () => {\n    if (id) {\n      history.push({\n        pathname: `/movie/${id}`\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          padding: `0 ${chevronWidth}px`\n        },\n        children: \"Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: `0 ${chevronWidth}px`\n        },\n        children: /*#__PURE__*/_jsxDEV(ItemsCarousel, {\n          requestToChangeActive: setActiveItemIndex,\n          activeItemIndex: activeItemIndex,\n          numberOfCards: 5,\n          gutter: 20,\n          leftChevron: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faArrowLeft\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 38\n          }, this),\n          rightChevron: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faArrowRight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 39\n          }, this),\n          outsideChevron: true,\n          chevronWidth: chevronWidth,\n          className: \"movieCarousel\",\n          children: movies.map(movie => /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: '14rem',\n              cursor: 'pointer'\n            },\n            onClick: movieDetail(movie.id),\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: `https://image.tmdb.org/t/p/w200/` + movie.poster_path,\n              style: {\n                minHeight: 335\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                  style: {\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap'\n                  },\n                  children: movie.original_title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: dateformat(movie.release_date, \"mmmm dS, yyyy\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)]\n          }, movie.id.toString(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieCarousel, \"DfcQQreqyNIBoh2Czxk6bNccOkg=\", false, function () {\n  return [useHistory];\n});\n\n_c = MovieCarousel;\nexport default MovieCarousel;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieCarousel\");","map":{"version":3,"sources":["/home/jyoti/Projects/moviedb/moviedb-f/src/components/Carousel/MovieCarousel.js"],"names":["React","useState","useEffect","ItemsCarousel","Row","Card","FontAwesomeIcon","faArrowLeft","faArrowRight","axios","dateformat","useHistory","MovieCarousel","history","activeItemIndex","setActiveItemIndex","chevronWidth","myloginData","JSON","parse","localStorage","getItem","isLogin","setIsLogin","movies","setMovies","checkLogin","token","verified","get","headers","Authorization","console","log","data","clear","getMovies","res","movieDetail","id","push","pathname","padding","map","movie","width","cursor","poster_path","minHeight","overflow","textOverflow","whiteSpace","original_title","release_date","toString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ItemsCarousel from 'react-items-carousel';\nimport { Row, Card } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios';\nimport dateformat from 'dateformat';\nimport { useHistory } from 'react-router-dom';\n \nconst MovieCarousel = () => {\n    const history = useHistory()\n    const [activeItemIndex, setActiveItemIndex] = useState(0);\n    const chevronWidth = 30;\n    const myloginData = JSON.parse(localStorage.getItem('myloginData'));\n    const [isLogin, setIsLogin] = useState(false)\n    const [movies, setMovies] = useState([])\n\n    useEffect(() => {\n        const checkLogin = async () =>{\n            if(myloginData) {\n                const token = myloginData.token\n                if(token) {\n                    const verified = await axios.get('http://localhost:5000/api/v1/users/verify', {\n                        headers:{ Authorization: token}\n                    })\n                    console.log(verified)\n                    setIsLogin(verified.data)\n                    if(verified.data === false) return localStorage.clear()\n                } else {\n                    setIsLogin(false)\n                }\n            }\n        }\n        checkLogin()\n    }, [])\n    \n    // useEffect(() => {\n    //     axios.get(`http://localhost:5000/api/v1/movies/allmovies`)\n    //     .then((res) => {\n    //         setMovies(res.data);\n    //     })\n    // }, [])\n    \n    useEffect(() => {\n        const getMovies = async () => {\n            const res = await axios.get('http://localhost:5000/api/v1/movies/allmovies');\n            setMovies(res.data);\n        }\n        getMovies();\n    }, [])\n\n    const movieDetail = (id) => () => {\n        if(id) {\n            history.push({\n                pathname: `/movie/${id}`,\n            })\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Row className=\"mt-3\">\n                <h2 style={{ padding: `0 ${chevronWidth}px` }}>Movies</h2>\n                <div style={{ padding: `0 ${chevronWidth}px` }}>\n                    <ItemsCarousel\n                        requestToChangeActive={setActiveItemIndex}\n                        activeItemIndex={activeItemIndex}\n                        numberOfCards={5}\n                        gutter={20}\n                        leftChevron={<FontAwesomeIcon icon={faArrowLeft} />}\n                        rightChevron={<FontAwesomeIcon icon={faArrowRight} />}\n                        outsideChevron\n                        chevronWidth={chevronWidth} className=\"movieCarousel\">\n                        {movies.map((movie) => (\n                            <Card style={{ width: '14rem', cursor: 'pointer' }} key={(movie.id).toString()} onClick={movieDetail(movie.id)}>\n                                <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/w200/` + movie.poster_path} style={{minHeight: 335}}/>\n                                <Card.Body >\n                                    <Card.Title><h6 style={{overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap'}}>{movie.original_title}</h6></Card.Title>\n                                    <Card.Text>{dateformat(movie.release_date, \"mmmm dS, yyyy\")}</Card.Text>\n                                </Card.Body>\n                            </Card>\n                        ))}\n                    </ItemsCarousel>\n                </div>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default MovieCarousel;"]},"metadata":{},"sourceType":"module"}