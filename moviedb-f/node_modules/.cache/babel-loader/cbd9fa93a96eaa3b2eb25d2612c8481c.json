{"ast":null,"code":"var _jsxFileName = \"/home/jyoti/Projects/moviedb/moviedb-f/src/components/Grid/MovieGridView.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from '../Header/Header';\nimport { Container, Row, Card, Button, Col, InputGroup, FormControl, ListGroup } from 'react-bootstrap';\nimport { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport Footer from '../Footer/Footer';\nimport { useHistory } from 'react-router';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieGridView = props => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const history = useHistory();\n  const useStyleCard = {\n    width: '18rem',\n    margin: '0em 1em 1em 1em',\n    boxShadow: '2px 6px 8px 0 rgba(22, 22, 26, 0.18)',\n    border: 'none',\n    borderRadius: 0\n  };\n  const useStyleListBox = {\n    display: 'inline-flex',\n    border: '1px solid #9e9e9e',\n    borderRadius: '14px',\n    padding: '4px 12px',\n    fontSize: '0.9em',\n    marginRight: '6px',\n    marginTop: '8px',\n    width: 'max-content'\n  };\n  const useStyleFilterBox = {\n    boxShadow: '0 2px 8px rgb(0 0 0 / 10%)',\n    border: '1px solid #e3e3e3',\n    padding: 10,\n    borderRadius: 7\n  };\n  useEffect(() => {\n    const getMovies = async () => {\n      const res = await axios.get('http://localhost:5000/api/v1/movies/allmovies');\n      setMovies(res.data);\n    };\n\n    getMovies();\n  }, []);\n  useEffect(() => {\n    const getGenres = async () => {\n      const res = await axios.get('http://localhost:5000/api/v1/category/genres');\n      setGenres(res.data);\n    };\n\n    getGenres();\n  }, []);\n\n  const movieDetail = id => () => {\n    if (id) {\n      history.push({\n        pathname: `/movie/${id}`\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mt-3 mb-3\",\n        children: \"Popular Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 3,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              style: useStyleFilterBox,\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Search Movie\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"panel\",\n                children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    placeholder: \"Movie\",\n                    \"aria-label\": \"Movie\",\n                    \"aria-describedby\": \"basic-addon2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                    id: \"basic-addon2\",\n                    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faSearch\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 76\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              style: useStyleFilterBox,\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Genres\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"panel\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  style: {\n                    listStyleType: 'none',\n                    padding: 0\n                  },\n                  children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"li\", {\n                    style: useStyleListBox,\n                    \"data-id\": genre.id,\n                    children: genre.name\n                  }, genre._id.toString(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 9,\n          md: 9,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: movies.map(movie => /*#__PURE__*/_jsxDEV(Card, {\n              style: useStyleCard,\n              onClick: movieDetail(movie._id),\n              \"data-genreid\": movie.genre_ids,\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: `https://image.tmdb.org/t/p/w200/` + movie.poster_path\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: movie.original_title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  style: {\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap'\n                  },\n                  children: movie.overview\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"dark\",\n                  onClick: movieDetail(movie._id),\n                  style: {\n                    borderRadius: 20\n                  },\n                  children: \"View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this)]\n            }, movie._id.toString(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieGridView, \"Ht7AuJnKRp4pZs8OUlCupP2XK6A=\", false, function () {\n  return [useHistory];\n});\n\n_c = MovieGridView;\nexport default MovieGridView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieGridView\");","map":{"version":3,"sources":["/home/jyoti/Projects/moviedb/moviedb-f/src/components/Grid/MovieGridView.js"],"names":["React","Header","Container","Row","Card","Button","Col","InputGroup","FormControl","ListGroup","useState","useEffect","FontAwesomeIcon","faSearch","Footer","useHistory","axios","MovieGridView","props","movies","setMovies","genres","setGenres","history","useStyleCard","width","margin","boxShadow","border","borderRadius","useStyleListBox","display","padding","fontSize","marginRight","marginTop","useStyleFilterBox","getMovies","res","get","data","getGenres","movieDetail","id","push","pathname","listStyleType","map","genre","name","_id","toString","movie","genre_ids","poster_path","original_title","overflow","textOverflow","whiteSpace","overview"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from '../Header/Header';\nimport { Container, Row, Card, Button, Col, InputGroup, FormControl, ListGroup } from 'react-bootstrap';\nimport { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport Footer from '../Footer/Footer';\nimport { useHistory } from 'react-router';\nimport axios from 'axios';\n\nconst MovieGridView = (props) => {\n    const [movies, setMovies] = useState([])\n    const [genres, setGenres] = useState([])\n    const history = useHistory()\n\n    const useStyleCard = {\n        width: '18rem',\n        margin: '0em 1em 1em 1em',\n        boxShadow: '2px 6px 8px 0 rgba(22, 22, 26, 0.18)',\n        border: 'none',\n        borderRadius: 0\n    }\n\n    const useStyleListBox = {\n        display: 'inline-flex',\n        border: '1px solid #9e9e9e',\n        borderRadius: '14px',\n        padding: '4px 12px',\n        fontSize: '0.9em',\n        marginRight: '6px',\n        marginTop: '8px',\n        width: 'max-content'\n    }\n\n    const useStyleFilterBox = {\n        boxShadow: '0 2px 8px rgb(0 0 0 / 10%)',\n        border: '1px solid #e3e3e3',\n        padding: 10,\n        borderRadius: 7\n    }\n\n    useEffect(() => {\n        const getMovies = async () => {\n            const res = await axios.get('http://localhost:5000/api/v1/movies/allmovies');\n            setMovies(res.data);\n        }\n        getMovies();\n    }, [])\n\n    useEffect(() => {\n        const getGenres = async () => {\n            const res = await axios.get('http://localhost:5000/api/v1/category/genres');\n            setGenres(res.data);\n        }\n        getGenres();\n    }, [])\n\n    const movieDetail = (id) => () => {\n        if(id) {\n            history.push({\n                pathname: `/movie/${id}`,\n            })\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Header/>\n            <Container>\n                <h4 className=\"mt-3 mb-3\">Popular Movies</h4>\n                <Row>\n                    <Col sm={3} md={3}>\n                        <div className=\"filter-container\">\n                            <div className=\"mb-3\" style={useStyleFilterBox}>\n                                <h5>Search Movie</h5>\n                                <div className=\"panel\">\n                                    <InputGroup className=\"mb-3\">\n                                        <FormControl\n                                        placeholder=\"Movie\"\n                                        aria-label=\"Movie\"\n                                        aria-describedby=\"basic-addon2\"\n                                        />\n                                        <InputGroup.Text id=\"basic-addon2\"><FontAwesomeIcon icon={faSearch} /></InputGroup.Text>\n                                    </InputGroup>\n                                </div>\n                            </div>\n                            <div className=\"mb-3\" style={useStyleFilterBox}>\n                                <h5>Genres</h5>\n                                <div className=\"panel\">\n                                    <ul style={{listStyleType: 'none', padding: 0}}>\n                                        {genres.map((genre) => (\n                                            <li style={useStyleListBox} key={(genre._id).toString()} data-id={genre.id}>{genre.name}</li>\n                                        ))}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </Col>\n                    <Col sm={9} md={9}>\n                        <Row>\n                        {movies.map((movie) => (\n                            <Card style={useStyleCard} key={(movie._id).toString()} onClick={movieDetail(movie._id)} data-genreid={movie.genre_ids}>\n                                <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/w200/` + movie.poster_path} />\n                                <Card.Body>\n                                    <Card.Title>{movie.original_title}</Card.Title>\n                                    <Card.Text style={{overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap'}}>{movie.overview}</Card.Text>\n                                    <Button variant=\"dark\" onClick={movieDetail(movie._id)} style={{borderRadius: 20}}>View</Button>\n                                </Card.Body>\n                            </Card>\n                        ))}\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n            <Footer/>\n        </React.Fragment>\n    )\n}\n\nexport default MovieGridView;"]},"metadata":{},"sourceType":"module"}