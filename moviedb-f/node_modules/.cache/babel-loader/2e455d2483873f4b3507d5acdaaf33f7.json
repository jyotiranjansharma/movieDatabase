{"ast":null,"code":"var _jsxFileName = \"/home/jyoti/Projects/moviedb/moviedb-f/src/components/Carousel/TvshowsCarousel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ItemsCarousel from 'react-items-carousel';\nimport { Row, Card } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { useHistory } from 'react-router-dom';\nimport dateFormat from 'dateformat';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TvCarousel = () => {\n  _s();\n\n  const history = useHistory();\n  const [activeItemIndex, setActiveItemIndex] = useState(0);\n  const chevronWidth = 30;\n  const [tvs, setTvs] = useState([]);\n  useEffect(() => {\n    const getTvs = async () => {\n      const res = await axios.get('http://localhost:5000/api/v1/tv/alltv');\n      setTvs(res.data);\n    };\n\n    getTvs();\n  }, []);\n\n  const tvDetail = id => () => {\n    if (id) {\n      history.push({\n        pathname: `/tv/${id}`\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          padding: `0 ${chevronWidth}px`\n        },\n        children: \"TV Shows\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: `0 ${chevronWidth}px`\n        },\n        children: /*#__PURE__*/_jsxDEV(ItemsCarousel, {\n          requestToChangeActive: setActiveItemIndex,\n          activeItemIndex: activeItemIndex,\n          numberOfCards: 5,\n          gutter: 20,\n          leftChevron: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faArrowLeft\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 38\n          }, this),\n          rightChevron: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faArrowRight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 39\n          }, this),\n          outsideChevron: true,\n          chevronWidth: chevronWidth,\n          children: tvs.map(tv => /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: '14rem',\n              cursor: 'pointer'\n            },\n            onClick: tvDetail(tv._id),\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: `https://image.tmdb.org/t/p/w500/` + tv.poster_path,\n              style: {\n                minHeight: 335\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                  style: {\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap'\n                  },\n                  children: tv.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: dateFormat(tv.first_air_date, \"mmmm dS, yyyy\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)]\n          }, tv._id.toString(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TvCarousel, \"cEZduQZTrbREFXrPRbNqLq7oMAs=\", false, function () {\n  return [useHistory];\n});\n\n_c = TvCarousel;\nexport default TvCarousel;\n\nvar _c;\n\n$RefreshReg$(_c, \"TvCarousel\");","map":{"version":3,"sources":["/home/jyoti/Projects/moviedb/moviedb-f/src/components/Carousel/TvshowsCarousel.js"],"names":["React","useState","useEffect","ItemsCarousel","Row","Card","FontAwesomeIcon","faArrowLeft","faArrowRight","useHistory","dateFormat","axios","TvCarousel","history","activeItemIndex","setActiveItemIndex","chevronWidth","tvs","setTvs","getTvs","res","get","data","tvDetail","id","push","pathname","padding","map","tv","width","cursor","_id","poster_path","minHeight","overflow","textOverflow","whiteSpace","name","first_air_date","toString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ItemsCarousel from 'react-items-carousel';\nimport { Row, Card } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons'\nimport { useHistory } from 'react-router-dom';\nimport dateFormat from 'dateformat';\nimport axios from 'axios';\n\nconst TvCarousel = () => {\n    const history = useHistory()\n    const [activeItemIndex, setActiveItemIndex] = useState(0);\n    const chevronWidth = 30;\n    const [tvs, setTvs] = useState([])\n\n    useEffect(() => {\n        const getTvs = async () => {\n            const res = await axios.get('http://localhost:5000/api/v1/tv/alltv');\n            setTvs(res.data);\n        }\n        getTvs();\n    }, [])\n\n    const tvDetail = (id) => () => {\n        if(id) {\n            history.push({\n                pathname: `/tv/${id}`,\n            })\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Row className=\"mt-3\">\n                <h2 style={{ padding: `0 ${chevronWidth}px` }}>TV Shows</h2>\n                <div style={{ padding: `0 ${chevronWidth}px` }}>\n                    <ItemsCarousel\n                        requestToChangeActive={setActiveItemIndex}\n                        activeItemIndex={activeItemIndex}\n                        numberOfCards={5}\n                        gutter={20}\n                        leftChevron={<FontAwesomeIcon icon={faArrowLeft} />}\n                        rightChevron={<FontAwesomeIcon icon={faArrowRight} />}\n                        outsideChevron\n                        chevronWidth={chevronWidth}>\n                        {tvs.map((tv) => (\n                            <Card style={{ width: '14rem', cursor: 'pointer' }} key={(tv._id).toString()} onClick={tvDetail(tv._id)}>\n                                <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/w500/` + tv.poster_path} style={{minHeight: 335}}/>\n                                <Card.Body >\n                                    <Card.Title><h6 style={{overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap'}}>{tv.name}</h6></Card.Title>\n                                    <Card.Text>{dateFormat(tv.first_air_date, \"mmmm dS, yyyy\")}</Card.Text>\n                                </Card.Body>\n                            </Card>\n                        ))}\n                    </ItemsCarousel>\n                </div>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default TvCarousel;"]},"metadata":{},"sourceType":"module"}